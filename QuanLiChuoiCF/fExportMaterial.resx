<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgAAES2wHTktsCVVLbAlVS2wJVUtsCVVLbAlVS2wJVUts
        CVVMbAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS24JWExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/05qByQAAAAAAAAAAAAAAAAAAAAAAAAAAEtuCGZMbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9LbgozAAAAAAAAAAAAAAAAAAAAAAAAAABLbghmTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/S24KMwAAAAAAAAAAAAAAAAAAAAAAAAAAS24IZkxtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0tuCjNHcQ4STW0IiFWAAAYAAAAAAAAAAEtuCGZMbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9LbgozSW0AB0xtCL1MbQevVYAABgAAAABLbghmTG0I/0xt
        CP9MbQj/TG0I/0xtCP1MbQiDS20Jd0ttCXdLbQl3S24Ie01tCIhMbQeNTG0I4EtuCMEAAAAAS24IZkxt
        CP9MbQj/TG0I/0xtCP9MbQj+S20IektuCGZLbghmS24IZk1vCoVNbAiZTGsInUxtCOVMbgjDAAAAAEtu
        CGZMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9LbgozSW0AB0xtCL1MbQevVYAABgAA
        AABLbghmTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/S24KM0dxDhJNbQiIVYAABgAA
        AAAAAAAAS24IZkxtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TWwIyFVxAAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAEtuCGZMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TGwHz1FrDRMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABLbglYTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TWwIyERmAA8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQIAABExtCVRLbghmS24IZktuCGZLbghmTW0IYEltAA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAwB8AAMAfAADAHwAAwBsAAMAZAADA8AAAweAAAMAZ
        AADAGwAAwB8AAMA/AADAfwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATnYADUxtCZRLbQjLTG0IzExt
        CMxMbQjMTG0IzExtCMxMbQjMTG0IzExtCMxMbQjMTG0IzExtCMxMbQjMTG0IzExtCMxNbAjBTGwJVwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQmTTG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj9SmwGLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExt
        CMpMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9NbAhjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATG0IzExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0tuCGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbQjMTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/S24IZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCMxMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9LbghmAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0IzExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0tuCGYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQjMTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/S24IZgAA
        AAAAAAAAAAAAAUttCD1LaQ8RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCMxMbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9LbghmAAAAAAAAAABMbglRTG0I/0xtCNlObAoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0IzExt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0tuCGYAAAAAAAAAAFBwCCBMbQjpTG0I/0xtCNlObAoaAAAAAAAAAAAAAAAAAAAAAAAA
        AABMbQjMTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/S24IZgAAAAAAAAAAAAAAAE1vCjVMbQfvTG0I/01tCdJJbQwVAAAAAAAA
        AAAAAAAAAAAAAExtCMxMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9LbghmAAAAAAAAAAAAAAAAAAAAAE1vCjVMbQfvTG0I/01t
        CdJJbQwVAAAAAAAAAAAAAAAATG0IzExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CPRJbQkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1sCJlMbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCdAAAAAAAAAAAAAAAABMbQjMTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I9EltCRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATWwImUxtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0J0AAAAAAAAAAAAAAAAExtCMxMbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/kxtCO5MbQjuTG0I7kxtCO5MbQjuTG0I7kxtCO5MbwhlS2kPEUtp
        DxFLaQ8RS2kPEUpsCjRMbQjnTG0I/01tCOJNbAghAAAAAAAAAAAAAAAATG0IzExtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0tu
        CGYAAAAAAAAAAAAAAABKawcmTG0I5UxtCP9MbQjgTWwIIQAAAAAAAAAAAAAAAAAAAABMbQjMTG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/S24IZgAAAAAAAAAAUHAIIExtCOlMbQj/TG0I2U5sChoAAAAAAAAAAAAAAAAAAAAAAAAAAExt
        CMxMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9LbghmAAAAAAAAAABMbglRTG0I/0xtCNlObAoaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATG0IzExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCGUAAAAAAAAAAAAAAAFLbQg9S2kPEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbQjMTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj1S24GLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCMxMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I+UxtB00AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0IzExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCPlMbQdNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQjMTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj5TG0HTQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCMpMbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I9U1sCEIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0Jk0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCPVNbAhCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABOdgANTG0JlExsCNZMbAjdTGwI3UxsCN1MbAjdTGwI3UxsCN1MbAjdTGwI3UxsCN1MbQjMTGwIQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////AAB//gAAP/4AAD/+AAA//gAAP/4AAD/+AA
        A//gAAP/4AADz+AAA8fgAAPj4AAD8eAD/ADgA/wA4AAD8eAAA+PgAAPH4AADz+AAA//gAAP/4AAH/+AA
        D//gAB//4AA//+AAf//wAP//////////////////
</value>
  </data>
</root>