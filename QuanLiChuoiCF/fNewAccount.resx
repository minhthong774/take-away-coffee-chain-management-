<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCP9MbQj/AAAAAAAA
        AAAAAAAATG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/wAAAAAAAAAAAAAAAExt
        CP9MbQj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0I/0xt
        CP8AAAAAAAAAAAAAAABMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/AAAAAAAA
        AAAAAAAATG0I/0xtCP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABMbQj/TG0I/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbQj/TG0I/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAExtCP9MbQj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCP9MbQj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATG0I/0xtCP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQj/TG0I/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TGwI1gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCP9MbQj/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCP9MbQj/AAAAAEltDBVNbQnSTG0I/0xtCNpMcQkbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0I/0xtCP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0I/0xtCP9JbQwVTW0J0kxtCP9MbQjZTHEJGwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQj/TG0I/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMbQj/TG0I/01tCdJMbQj/TG0I2U5s
        ChoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExt
        CP9MbQj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCP9MbQj/TG0I/0xt
        CdFNcw0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQjYTmwKGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0HzlFrDRMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//+B///+AH///Dw/wAD/H8AB55/P8eePz/Pnz8/zAM/P8wDPzg
        Pnz84B54/P+eefz/j/H84APD/OAAB/z/+B/8//8//OAHP/zgBz/8//8//P//P/z/wD/8/8A//P/Mf/z/
        yP/8/8H//P/D//wAB//8AA//////////////////
</value>
  </data>
</root>