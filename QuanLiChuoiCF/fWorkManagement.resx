<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUWoGKUxu
        B3IzZgAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATHEJGwAAAAAAAAAAAAAAAFVVAANLbAdOTW0JtExt
        CP1MbQj/TG4I2k1sClAAAAAAAAAAAAAAAAAAAAAAAAAAAExtCOxNbQm0TW4JVkttCIFMbAjkTG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TWwIwU1vCjUAAAAAAAAAAAAAAABMbQjuTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtB9RNbQdnTG0HzkxtCP9MbQj+TG0IqAAAAAAAAAAATG0I7kxtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbAjgSW0ABwAAAABMawk5S24IwUxuCKIAAAAAAAAAAExtCO5MbQj/TG0I/0xt
        CP9MbQj/TG0I/ktuCLpNawdMgIAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQcAggTW8IgUtt
        B/RNbQj8TW4Ivk9tBioAAAAAAAAAAAAAAAAAAAAAS24IX0xtCNRMbQjaS2kPEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABS20HSwAAAAAAAAAASmwGLUxtCP9NbAlxTG0Iu0xtCMIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMbgiATW0It0xtCP9MbQevS20Jd0twBilMbQj/TG4JUUxtCKhLbQjEAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgAACTG0I4U1tCIhNbAYoS20ImE1tCdIzZgAFTG0IfExtCPVMbQjpS24GLAAA
        AAAAAAAAAAAAAAAAAAAAAAAATG0Ig0xtCOxAgAAES20IpjNmAAVNbQj6TG4JcjNmAAVVcQAJRGYADwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtwBilMbQj0UHAIIE1sCCFObwYuTG0I8U1vCR4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG0I10xtCOpMbQi7TG0H70xtCMYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERmAA9MbQUvTG0Hzk5vBydEZgAPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/h8AAJAHAACAIQAAgDkAAID/AADD8wAA/+kAAPhp
        AAD5MwAA8r8AAPu/AAD4PwAA/v8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdxDhJLbQmWTW0I6ExsCL9QcAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtwBilNbQiITG0I7kxtCP9MbQj/TG0I/0xt
        COtMbQhegIAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS20JcElt
        CRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATnYADUxsB2hMbQnQTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQjaTG4JUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABMbAjdTG0I9kxtCZFKawcmAAAAAAAAAAAAAAAATG4HJU1tCIhMbQjrTG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG4Js0twBikAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAExsCN1MbQj/TG0I/0xtCP9MbQjFTG4JkExtCMlMbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/kttCKZKawgfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATGwI3UxtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCO1NbQmtTG0Hr01tCPpMbQj/TG0I/0xtCP9MbQj/TG0I/01u
        CPlMbQe2TmIADQAAAAAAAAAAAAAAAAAAAABMbAjdTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCPZMcQkbUHAIIE1tCIhMbQjoTG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQerAAAAAAAAAAAAAAAAAAAAAExsCN1MbQj/TG0I/0xtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0tuBiwAAAAAAAAAADNm
        AAVMbQheTG0IzExtCP9MbQj/TG0I/0xtCMUAAAAAAAAAAAAAAAAAAAAATGwI3UxtCP9MbQj/TG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCPhOawh5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATWwIIUxtCahMbQmxS24GLAAAAAAAAAAAAAAAAAAAAABMbAjdTG0I/0xt
        CP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCNlMbAdvTWYACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExt
        CNpMbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/ExuB6xLbQg9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAAJJbQAHAAAAAFVVAANVgAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATm8LF0ttCXdLbQjVTG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TG4I+ExtCKJNawYrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS20Jd0xtCNlNbQiITG0Iw0xtCKgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPagkdTG0JlExuCe9NbQj6S20I8UxtB5NOdgANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5vBydMbQjhTG0I/0xtCP9MbQj/TG0I9U1v
        CTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNbQiITG0I+UxtCP9NbQjmS24Hjkxt
        CNNMbQj/TG0I/ExtCLYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAS24Iuk1sCJkAAAAAAAAAAAAAAAAAAAAAAAAAAE5tCjFMbQj/TG0I/0xt
        BS8AAAAAUHAAEExtCO5MbQj/TW0IYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE1sBihNbAghSmwKNExtB6tMbQj/TG0I+0xtCJpKawcmSmwGLU9qCR0AAAAAS3EIIkxt
        CP9MbQj/UWgMFgAAAACAgAACTG0I40xtCP9NbAlTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATG0J0ExtCP9MbQj/TG0I/0xtCP9MbQj/TG0I/0xtCP9MbQj/TW0HrQAA
        AABMbgeJTG0I/0xtCP9MbQi9S2wJVUxtCJ1MbQj/TG0I/0xtCLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNbQmWTG0I/0xtCP9MbQioTG0JVExtCFtMbQi7TG0I/0xt
        CP9LbQlzAAAAAEltCRxNbghdTG0I+ExtCP9MbQj/TG0I/0xtCP9MbQeKT20GKgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQGAACExtCOlMbQj/TG4IgAAAAAAAAAAAAAAAAAAA
        AAFNbgijTG0I/0xtB84AAAAAAAAAAAAAAABMbgeJTG0I9kxsCN1MbQjxS24IugAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtpDxFLbgmVTG0I/0xtCOtAgAAEAAAAAE1s
        CXFMbQhbAAAAAEltDBVMbQj+TG0I/01uCHtVcQAJAAAAAEltCRxKcAswAAAAAE9qCR1KcAswAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS20JcExtCP9MbQj/TWwIyAAA
        AABRaAwWTG0I/0xtCPEAAAAAAAAAAExtCOtMbQj/TG0I/0xtB00AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGdAALTW0IiExt
        CP9MbQfvVYAABgAAAABNbQhgTG0HTQAAAABObAoaTG0I/0xtCP9MbQdsM2YABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzZgAFTGwI5ExtCP9LbAiEAAAAAAAAAAAAAAAAgIAAAkttCKZMbQj/TG0IxgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABNbQmWTG0I/0xtCP9MbAi1TG0IZUxtB2xMbQjGTG0I/0xtCP9LbQlzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExsB89MbQj5TG0I/UxtCP9MbQj/TG0I/0xtCP9NbQj6TG0I/Exu
        B6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT2oJHVFoDBZMbgclTG0ImkxtCP9MbQj4TG4HiUdw
        ChlKawgfTXMNFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG4Js01s
        CZIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////j////gf///gB/8fAAH/AAAAfwAAAB8AA
        DAPAAA+DwAAf58AAf//AAf//8Af/D/wf/g////gD//z85//4fOf/wAhD/8MeB//Hjg//j8///4zH//+P
        z///x4///8Mf///AD///+H////z/////////////
</value>
  </data>
</root>